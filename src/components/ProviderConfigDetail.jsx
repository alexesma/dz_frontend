// components/ProviderConfigDetail.jsx
import React, { useEffect, useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import { Card, Descriptions, Spin, message, Button } from 'antd';
import axios from 'axios';

const ProviderConfigDetail = () => {
    const { id } = useParams();
    const [cfg, setCfg] = useState(null);
    const [loading, setLoading] = useState(false);

    useEffect(() => {
        const fetchCfg = async () => {
            setLoading(true);
            try {
                // üîß –ü–û–ü–†–ê–í–¨ –ø—É—Ç—å –Ω–∞ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–π–Ω—Ç
                const { data } = await axios.get(`${import.meta.env.VITE_API_URL}/provider_configs/${id}`);
                setCfg(data);
            } catch (e) {
                console.error(e);
                message.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∞–π—Å–∞');
            } finally {
                setLoading(false);
            }
        };
        fetchCfg();
    }, [id]);

    return (
        <Card
            title={`–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∞–π—Å–∞ #${id}`}
            extra={<Link to="/providers"><Button>–ù–∞–∑–∞–¥ –∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º</Button></Link>}
        >
            <Spin spinning={loading}>
                {cfg && (
                    <Descriptions bordered column={1} size="small">
                        <Descriptions.Item label="–ù–∞–∑–≤–∞–Ω–∏–µ">{cfg.name_price}</Descriptions.Item>
                        {/* –ù–∏–∂–µ ‚Äî –ø–æ–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –≤ –æ—Ç–≤–µ—Ç–µ –±—ç–∫–µ–Ω–¥–∞ */}
                        {'start_row' in cfg && (
                            <Descriptions.Item label="–ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞">{cfg.start_row}</Descriptions.Item>
                        )}
                        {'oem_col' in cfg && (
                            <Descriptions.Item label="–ö–æ–ª–æ–Ω–∫–∞ OEM">{cfg.oem_col}</Descriptions.Item>
                        )}
                        {'brand_col' in cfg && (
                            <Descriptions.Item label="–ö–æ–ª–æ–Ω–∫–∞ –ë—Ä–µ–Ω–¥">{cfg.brand_col}</Descriptions.Item>
                        )}
                        {'name_col' in cfg && (
                            <Descriptions.Item label="–ö–æ–ª–æ–Ω–∫–∞ –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ">{cfg.name_col}</Descriptions.Item>
                        )}
                        {'qty_col' in cfg && (
                            <Descriptions.Item label="–ö–æ–ª–æ–Ω–∫–∞ –ö–æ–ª-–≤–æ">{cfg.qty_col}</Descriptions.Item>
                        )}
                        {'price_col' in cfg && (
                            <Descriptions.Item label="–ö–æ–ª–æ–Ω–∫–∞ –¶–µ–Ω–∞">{cfg.price_col}</Descriptions.Item>
                        )}
                        {'allowed_extensions' in cfg && (
                            <Descriptions.Item label="–î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è">{cfg.allowed_extensions?.join(', ')}</Descriptions.Item>
                        )}
                        {'subject_filter' in cfg && (
                            <Descriptions.Item label="–§–∏–ª—å—Ç—Ä –ø–æ —Ç–µ–º–µ –ø–∏—Å—å–º–∞">{cfg.subject_filter}</Descriptions.Item>
                        )}
                        {'updated_at' in cfg && (
                            <Descriptions.Item label="–û–±–Ω–æ–≤–ª–µ–Ω–æ">{new Date(cfg.updated_at).toLocaleString()}</Descriptions.Item>
                        )}
                    </Descriptions>
                )}
            </Spin>
        </Card>
    );
};

export default ProviderConfigDetail;